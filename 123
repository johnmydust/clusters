- name: Set worker node facts
      set_fact:
        worker_node_list: "{{ worker_nodes.resources | map(attribute='metadata.name') | list }}"
        worker_count: "{{ worker_nodes.resources | length }}"

    - name: Fail if no worker nodes found
      fail:
        msg: "No worker nodes found in the cluster"
      when: worker_count == 0

    - name: Get cluster domain
      kubernetes.core.k8s_info:
        api_version: config.openshift.io/v1
        kind: Ingress
        name: cluster
      register: cluster_info

    - name: Set cluster domain
      set_fact:
        cluster_domain: "{{ cluster_info.resources[0].spec.domain }}"

    - name: Expose OpenShift internal registry
      kubernetes.core.k8s_patch:
        kind: Config
        api_version: imageregistry.operator.openshift.io/v1
        name: cluster
        patch:
          spec:
            defaultRoute: true
        patch_type: merge

    - name: Get OpenShift authentication token
      command: oc whoami -t
      register: oc_token

    - name: Create debug pod
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Pod
          metadata:
            name: debug-container
            namespace: "{{ namespace }}"
          spec:
            containers:
            - name: debug
              image: registry.redhat.io/rhel8/support-tools
              command: ['sleep', '3600']
              securityContext:
                privileged: true
              volumeMounts:
              - name: host
                mountPath: /host
            volumes:
            - name: host
              hostPath:
                path: /
            nodeSelector:
              node-role.kubernetes.io/worker: ""

    - name: Wait for debug pod to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        name: debug-container
        namespace: "{{ namespace }}"
        wait: yes
        wait_condition:
          type: Ready
          status: "True"
      register: debug_pod

    - name: Login to internal registry from debug pod
      command: >
        oc exec -n {{ namespace }} debug-container -- chroot /host podman login -u {{ login_check.stdout }} 
        -p {{ oc_token.stdout }}
        --tls-verify=false
        default-route-openshift-image-registry.apps.{{ cluster_domain }}/{{ namespace }}

    - name: Pull test image from debug pod
      command: >
        oc exec -n {{ namespace }} debug-container -- chroot /host podman pull {{ registry_image }}

    - name: Tag image for internal registry from debug pod
      command: >
        oc exec -n {{ namespace }} debug-container -- chroot /host podman tag {{ registry_image }} 
        default-route-openshift-image-registry.apps.{{ cluster_domain }}/{{ namespace }}/{{ registry_image }}

    - name: Push image to internal registry from debug pod
      command: >
        oc exec -n {{ namespace }} debug-container -- chroot /host podman push 
        --tls-verify=false
        default-route-openshift-image-registry.apps.{{ cluster_domain }}/{{ namespace }}/{{ registry_image }}

    - name: Create test deployment
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: "{{ test_deployment_name }}"
            namespace: "{{ namespace }}"
          spec:
            replicas: "{{ worker_count }}"
            selector:
              matchLabels:
                app: "{{ test_deployment_name }}"
            template:
              metadata:
                labels:
                  app: "{{ test_deployment_name }}"
              spec:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: kubernetes.io/hostname
                          operator: In
                          values: "{{ worker_node_list }}"
                containers:
                - name: test-container
                  image: "image-registry.openshift-image-registry.svc:5000/{{ namespace }}/{{ registry_image }}"
                  command: ["sleep", "3600"]

    - name: Wait for deployment to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: "{{ test_deployment_name }}"
        namespace: "{{ namespace }}"
        wait: yes
        wait_condition:
          type: Available
          status: "True"
      register: deployment_status

    - name: Get pods status
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ namespace }}"
        label_selectors:
          - app={{ test_deployment_name }}
      register: test_pods

    - name: Get failing pods details
      when: test_pods.resources | length != worker_count
      block:
        - name: Get events for failing pods
          kubernetes.core.k8s_info:
            api_version: v1
            kind: Event
            namespace: "{{ namespace }}"
            field_selectors:
              - "involvedObject.kind=Pod"
              - "involvedObject.namespace={{ namespace }}"
          register: pod_events

        - name: Display failing pods information
          debug:
            msg: |
              Failing Pods Status:
              {% for pod in test_pods.resources %}
              Pod: {{ pod.metadata.name }}
              Status: {{ pod.status.phase }}
              Node: {{ pod.spec.nodeName }}
              Conditions:
              {% for condition in pod.status.conditions %}
                - {{ condition.type }}: {{ condition.status }}
                  Reason: {{ condition.reason }}
                  Message: {{ condition.message | default('None') }}
              {% endfor %}
              {% endfor %}

        - name: Display relevant events
          debug:
            msg: "{{ pod_events.resources | map(attribute='message') | list }}"

    - name: Verify pod distribution
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ namespace }}"
        label_selectors:
          - app={{ test_deployment_name }}
      register: distribution_check

    - name: Show pod distribution
      debug:
        msg: |
          Pod Distribution:
          {% for pod in distribution_check.resources %}
          - Pod: {{ pod.metadata.name }}
            Node: {{ pod.spec.nodeName }}
            Status: {{ pod.status.phase }}
          {% endfor %}

    - name: Return to original project
      command: oc project {{ current_project.stdout }}

    - name: Cleanup resources
      kubernetes.core.k8s:
        state: absent
        definition: "{{ item }}"
      loop:
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: "{{ test_deployment_name }}"
            namespace: "{{ namespace }}"
        - apiVersion: v1
          kind: Pod
          metadata:
            name: debug-container
            namespace: "{{ namespace }}"
      ignore_errors: true
